@page "/"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject NavigationManager navMan
@inject IJSRuntime jsRuntime

<PageTitle>Home</PageTitle>

<div class="background">
    <h1>Metar Parser</h1>
    <div id="mainView">
        <div class="icaoDiv" id="center">
            <h3>Enter an ICAO</h3>
            <textarea value="@icao" @onchange="e => icao = e.Value.ToString()" id="icaoTb" class="textBox" maxlength="4" style="overflow: hidden" placeholder="ICAO"></textarea>
            <div class="icaoBtnDiv">
                <button id="submitICAOBtn" @onclick="SubmitICAO">SUBMIT</button>
            </div>
        </div>
        <div class="metarDiv" id="center">
            <h3>Enter a METAR</h3>  <! Reenable when functionality is implemented>
            <h5>INOP</h5>
            <textarea disabled id="metarTb" class="textBox" @onkeypress="@AutoResize" style="overflow: hidden" placeholder="METAR"></textarea>
            <div class="metarBtnDiv">
                <button disabled id="submitMETARBtn">SUBMIT</button>
            </div>
        </div>
    </div>
</div>

@code
{
    private string icao;
    private string metar;

    private string invalidICAO = "Invalid ICAO! Please enter a new ICAO and try again!";

    protected async void AutoResize(KeyboardEventArgs e)
    {
        await jsRuntime.InvokeVoidAsync("autoResize");
    }

    protected async void Alert(string message)
    {
        await jsRuntime.InvokeAsync<object>("Alert", message);
    }

    private void SubmitICAO()
    {
        if(!ICAODict.icaoDict.ContainsKey(icao))
        {
            Alert(invalidICAO);
            icao = "";

            return;
        }
        else
            navMan.NavigateTo($"Results/{icao}");
    }
}