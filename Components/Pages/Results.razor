@page "/results/{icao}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject NavigationManager navMan
@inject IJSRuntime jsRuntime

<body>
    <div class="container resultCont">
        <h1>Results</h1>
        <div class="resultView">
            @if(results == "")
            {
                <p>Loading...</p>
            }
            else
            {
                <textarea class="resultText" id="results" readonly>@results</textarea>
            }
        </div>
        <button type="button" @onclick="BackBtn_Click">Back</button>
    </div>
</body>



@code {

    [Parameter]
    public string icao { get; set; }
    private string metar;
    private string results = "";

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => GetMetar());
    }

    private void BackBtn_Click()
    {
        results = "";

        MetarParser.ResetMetarStrings();

        navMan.NavigateTo("/");
    }

    private void GetMetar()
    {
        metar = ApiHandler.RequestMetar(icao);

        MetarParser.GetParsedMetar(metar);

        results = MetarParser.GetDecodedMetarAsString();

        MetarParser.ResetMetarStrings();
    }
}
